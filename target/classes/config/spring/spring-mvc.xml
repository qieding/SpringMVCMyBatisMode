<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
       <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"-->
       <!--xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"-->
       <!--xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:mvc="http://www.springframework.org/schema/mvc"-->
       <!--xmlns:util="http://www.springframework.org/schema/util"-->
       <!--xsi:schemaLocation="http://www.springframework.org/schema/beans-->
                     <!--http://www.springframework.org/schema/beans/spring-beans-3.2.xsd-->
                     <!--http://www.springframework.org/schema/tx-->
                     <!--http://www.springframework.org/schema/tx/spring-tx.xsd-->
                     <!--http://www.springframework.org/schema/context-->
                     <!--http://www.springframework.org/schema/context/spring-context.xsd-->
                     <!--http://www.springframework.org/schema/aop-->
                     <!--http://www.springframework.org/schema/aop/spring-aop.xsd-->
                     <!--http://www.springframework.org/schema/jdbc-->
                     <!--http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd-->
                     <!--http://www.springframework.org/schema/util-->
                     <!--http://www.springframework.org/schema/util/spring-util-3.2.xsd-->
                     <!--http://www.springframework.org/schema/mvc-->
                     <!--http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
       <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
       <!--xmlns:context="http://www.springframework.org/schema/context"-->
       <!--xmlns:mvc="http://www.springframework.org/schema/mvc"-->
       <!--xsi:schemaLocation="http://www.springframework.org/schema/beans-->
       <!--http://www.springframework.org/schema/beans/spring-beans.xsd-->
       <!--http://www.springframework.org/schema/context-->
       <!--http://www.springframework.org/schema/context/spring-context.xsd-->
       <!--http://www.springframework.org/schema/mvc-->
       <!--http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">-->
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" >
        <constructor-arg index="0" value="UTF-8" />
        <property name = "supportedMediaTypes">
            <list>
                <value>text/html;charset=utf-8</value>
                <!--<value>application/json;charset=utf-8</value>-->
                <!--&lt;!&ndash; application 可以在任意 form 表单里面 enctype 属性默认找到 &ndash;&gt;-->
                <!--<value>application/x-www-form-urlencoded</value>-->
            </list>
        </property>
    </bean>
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="stringHttpMessageConverter"/>-->
                <!--&lt;!&ndash;<ref bean="jackson2HttpMessageConverter"/>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--配置转换器要注入HandlerAdapter中-->
    <!--配置校验器要注入HandlerAdapter中-->
    <mvc:annotation-driven conversion-service="conversionService" validator="validator">
        <!--配置消息转换器：使得responseBody返回类型不会出现中文乱码-->
        <!--<mvc:message-converters register-defaults="false">-->
            <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
                <!--&lt;!&ndash;<property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />&ndash;&gt;-->
                <!--<constructor-arg value="UTF-8" />-->
                <!--<property name="supportedMediaTypes" value = "text/html;charset=utf-8" />-->
            <!--</bean>-->
        <!--</mvc:message-converters>-->
        <mvc:message-converters register-defaults="true">
            <ref bean="stringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>

    </mvc:annotation-driven>
    <!-- 扫描web相关的bean -->
    <context:component-scan base-package="com.dhk"/>

    <!-- 开启SpringMVC注解模式 -->
    <!--<mvc:annotation-driven/>-->
    <!--可以将WEB-INF下的目录静态文件映射成url目录-->
    <mvc:resources mapping="/logic/**" location="/WEB-INF/views/"/>

    <!-- 静态资源默认servlet配置，可以映射webapp下的，但WEB-INF下的不好映射 -->
    <mvc:default-servlet-handler />

    <!--自定义参数绑定-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!--转换器-->
        <property name="converters">
            <list>
                <!--日期类型转换器-->
                <!--<bean class="com.dhk.controller.converter.CustomDateConverter"/>-->
                <bean class="com.dhk.controller.converter.CustomDateConverter" />
                <!--字符串去前后空格转换器-->
            </list>
        </property>
    </bean>
    <!--校验器-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!--hibernate校验器-->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
        <!--指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则使用
            classpath:ValidationMessages.properties
        -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <!--校验错误信息配置文件-->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="useCodeAsDefaultMessage" value="true" />
        <!--资源文件名-->
        <property name="basenames">
            <list>
                <value>classpath:CustomValidationMessages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="utf-8" />
        <property name="cacheSeconds" value="120" />
    </bean>
    <!--加载异常处理器-->
    <!--<bean class="com.dhk.exception.CustomExceptionResolver"/>-->
    <!--文件上传配置-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>
    <!--Intercepter拦截器配置：拦截器分为HandlerMapping注册和全局注册，此处为全局注册
        true:true:preHandle方法按顺序执行。
                  postHandle和afterCompletion按拦截器配置的逆向顺序执行。
        true:false:1执行，2才执行
                   2 preHandle不放行，2 postHandle和afterCompletion不会执行。
                   只要有一个不放行，postHandle不会执行
        false:true:1不执行，2执行
                   1不放行，postHandle和afterCompletion不会执行。
                   1不放行，2不执行。
    -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.dhk.intercepter.LoginInterceptor"/>
        </mvc:interceptor>
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.dhk.intercepter.HandlerIntecepter1"/>-->
        <!--</mvc:interceptor>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.dhk.intercepter.HandlerIntecepter2"/>-->
        <!--</mvc:interceptor>-->
    </mvc:interceptors>
    <!-- 配置jsp 显示ViewResolver,对request.getRequestDispatcher不起作用 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".html"/>
    </bean>
</beans>