<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 设置为IUserDao接口方法提供sql语句配置 -->
<mapper namespace="com.dhk.dao.PersonMapperDao">
    <select   id="findPersonById" resultType="Person" parameterType="long" flushCache="true">
        SELECT * FROM person WHERE id = ${value}
    </select>
    <select   id="findPersonByName" parameterType="String" resultType="Person">
        SELECT * FROM person WHERE name = #{name}
    </select>
    <!--测试自增主键回填-->
    <insert id="insertPersonReturnKey" parameterType="Person" useGeneratedKeys="true" keyProperty="id">
        insert into person(name,email,status) values (#{name},#{email},#{status})
    </insert>
    <!--测试自增主键回填-->
    <insert id="insertSelectKey" parameterType="Person" >
        insert into person(name,email,status) values(#{name},#{email},#{status})
        <!--keyProperty对应于类的属性名，keyColumn对应于数据库表的列-->
        <selectKey  resultType="long" keyProperty="id" keyColumn="id" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <update id="updatePersonByName">
        update person set name = #{name} where id =#{id}
    </update>
    <!-- 删除测试-->
    <delete id="deletePersonById">
        delete from person where id = #{id}
    </delete>
    <!--多接口，Map-->
    <select id="selectPersonByIdAndName"  resultType="Person">
        select id,name,email,status from person where id=#{asdf.myid} and name =#{asdf.myName}
    </select>
    <!--多接口，@Param-->
    <select id="selectPersonByIdAndName2"  resultType="Person">
        select id,name,email,status from person where id=#{myid} and name =#{myName}
    </select>
    <!--动态SQL实现if模糊查找-->
    <select id="findPersonBySQL" resultType="Person">
        select id,email,name,status
        from person
        where 1=1
        <if test="name!=null and name!=''">
        <!--and name like concat(concat('%',#{name}),'%')可以-->
          <!--  and name like concat('%',#{name},'%')可以-->
            and name like '%${name}%'
        </if>
        <if test="id!=null and id!=''">
            and id =#{id}
        </if>
    </select>
    <!--动态SQL实现if模糊查找,where标签-->
    <select id="findPersonBySQL2" resultType="Person">
        select id,email,name,status
        from person
        <where>
            <if test="name!=null and name!=''">
                <!--and name like concat(concat('%',#{name}),'%')可以-->
                <!--  and name like concat('%',#{name},'%')可以-->
                and name like '%${name}%'
            </if>
            <if test="id!=null and id!=''">
                and id =#{id}
            </if>
        </where>
    </select>
    <!--动态sql实现更新,只更新有变化的字段-->
    <update id="updatePersonByIdSelective" parameterType="Person">
        update person set
        <if test="name!='' and name !=null">
             name =#{name},
        </if>
        <if test="email!=null and email!=''">
            email=#{email},
        </if>
        <if test="status!=0 and status!=1">
            status =#{status},
        </if>
        id=#{id}
        where id=#{id}
    </update>
    <!--动态sql实现更新,set标签-->
    <update id="updatePersonByIdSelective2" parameterType="Person">
        update person
        <set>
        <if test="name!='' and name !=null">
            name =#{name},
        </if>
        <if test="email!=null and email!=''">
            email=#{email},
        </if>
        <if test="status!=0 and status!=1">
            status =#{status},
        </if>
        id=#{id},
        </set>
        where id=#{id}
    </update>
    <!--动态sql实现更新,trim代替set标签-->
    <update id="updatePersonByIdSelective3" parameterType="Person">
        update person
        <trim prefix="SET" suffixOverrides=",">
            <if test="name!='' and name !=null">
                name =#{name},
            </if>
            <if test="email!=null and email!=''">
                email=#{email},
            </if>
            <if test="status!=0 and status!=1">
                status =#{status},
            </if>
            id=#{id},
        </trim>
        where id=#{id}
    </update>
    <!--动态sql实现插入,只插入有的字段没有的默认-->
    <insert id="insertPersonBySQL" useGeneratedKeys="true" keyProperty="id">
        insert into person(name,
        <if test ="email!=null and email!=''">
            email,
        </if>
        status)
        value (
        #{name},
        <if test="email !=null and email!=''">
          #{email},
        </if>
        #{status}
        )
    </insert>
    <select id="selectPersonByIdOrName" parameterType="Person" resultType="Person">
        select id,name,email,status from person where 1=1
        <choose>
            <when test="myperson.id!=null and myperson.id!=''">
                and id=#{myperson.id}
            </when>
            <when test="myperson.name!=null and myperson.name!=''">
                and name  =#{myperson.name}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>
    </select>
    <!--foreach 标签在IN中的使用-->
    <select id="selectPersonsForeachById"  resultType="Person">
        select id,name,email,status from person where id in
        <foreach collection="list" item="myid" index="i" open="(" close=")" separator=",">
            #{myid}
        </foreach>
    </select>
    <!--foreach 标签在IN中的使用-->
    <select id="selectPersonsForeachMapById" parameterType="Map" resultType="Person">
        select id,name,email,status from person where id in
        <foreach collection="mymP" index="mykey" item="myvalue"  open="(" close=")" separator=",">
          <!--  #{mykey} -->
            #{myvalue}
        </foreach>
    </select>
    <!--foreach 标签 批量插入,不能用@Param否则keyProperty不识别-->
    <insert id="insertPersonsForeachList" parameterType="List" useGeneratedKeys="true" keyProperty="id">
        insert into person(name,email,status) values
        <foreach collection="list" index="mykey" item="myvalue"  separator=",">
            (#{myvalue.name},#{myvalue.email},#{myvalue.status})
        </foreach>
    </insert>
    <!--测试模糊查找的sql注入问题,bind和concat都可以避免sql注入-->
    <select id="selectPersonByEmail"  resultType="Person">
        select id,name,email,status from person
         where email like
        <if test="email!=null and email!=''">
            <bind name="userEmail" value="'%'+email+'%'"></bind>
            #{userEmail}
         <!--concat('%',#{email},'%')-->
        <!--'%${value}%'-->
        </if>
    </select>
</mapper>